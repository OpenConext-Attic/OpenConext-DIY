---
- set_fact: _letsencrypt_certbot_args="{{ letsencrypt_certbot_args + ['--renew-by-default'] }}"
  when: letsencrypt_force_renew

- set_fact: _letsencrypt_certbot_args="{{ letsencrypt_certbot_args + ['--keep-until-expiring'] }}"
  when: not letsencrypt_force_renew

- set_fact: _letsencrypt_domains="--domains {{letsencrypt_domain}},www.{{letsencrypt_domain}}"
  when: letsencrypt_request_www

- set_fact: _letsencrypt_domains="--domains {{letsencrypt_domain}}"
  when: not letsencrypt_request_www

- set_fact: _letsencrypt_certbot_combined_args="{{_letsencrypt_certbot_args + letsencrypt_certbot_default_args + letsencrypt_certbot_args + [_letsencrypt_domains] }}"

- name: Stopping Services
  service: name="{{item}}" state=stopped
  with_items: "{{ letsencrypt_pause_services }}"
  ignore_errors: yes
  register: _services_stopped

- name: Obtain or renew cert for domain
  shell: ./certbot-auto {{_letsencrypt_certbot_combined_args | join(' ')}} 2>&1
  args:
    chdir: /opt/certbot
    executable: /bin/bash
  ignore_errors: true
  register: _certbot_command

- set_fact: _signing_successful='{{ certbot_success_message in _certbot_command.stdout }}'

- set_fact: _signing_skipped='{{ (certbot_skip_renewal_message in _certbot_command.stdout) and not letsencrypt_force_renew }}'

- debug: msg="{{ (_certbot_command.stdout_lines if _certbot_command.stdout_lines is defined else _certbot_command.stderr_lines) | pprint }}"
  when: (letsencrypt_certbot_verbose or ((not _signing_successful) and not _signing_skipped))

- set_fact:
    key_file: "/etc/letsencrypt/live/{{ letsencrypt_domain }}/privkey.pem"
    certificate_file: "/etc/letsencrypt/live/{{ letsencrypt_domain }}/cert.pem"
    chain_file: "/etc/letsencrypt/live/{{ letsencrypt_domain }}/fullchain.pem"
  when: _signing_successful

- name: Starting paused Services
  service: name="{{item.item}}" state=started
  when: (item.state is defined and item.state == "stopped")
  with_items: "{{ _services_stopped.results|default([]) }}"

- fail: msg="Error signing the certificate"
  when: not _signing_successful and not _signing_skipped
